local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local centerX = 0.5
local centerY = 0.5
local buttonWidth = 100
local buttonHeight = 50
local spacing = 10
local verticalOffset = buttonHeight + spacing

-- Create a frame to hold all the buttons
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, buttonHeight * 7 + spacing * 6)  -- Slightly larger frame
MainFrame.Position = UDim2.new(centerX, -110, centerY, -buttonHeight * 3.5 - spacing * 3)  -- Centered
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BackgroundTransparency = 0.5
MainFrame.Parent = ScreenGui

-- Add UIListLayout to manage button positioning
local Layout = Instance.new("UIListLayout")
Layout.Parent = MainFrame
Layout.FillDirection = Enum.FillDirection.Vertical
Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
Layout.Padding = UDim.new(0, spacing)

-- Create a frame to drag
local DragFrame = Instance.new("Frame")
DragFrame.Size = UDim2.new(1, 0, 1, 0) -- Full size of the MainFrame
DragFrame.BackgroundTransparency = 1
DragFrame.Parent = MainFrame

-- Add UIListLayout to manage button positioning
local Layout = Instance.new("UIListLayout")
Layout.Parent = MainFrame
Layout.FillDirection = Enum.FillDirection.Vertical
Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
Layout.Padding = UDim.new(0, spacing)

-- Make the frame draggable
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

DragFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

DragFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            update(input)
        end
    end
end)

-- Create buttons
local Button1 = Instance.new("TextButton")
Button1.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
Button1.Text = "Equip"
Button1.Parent = MainFrame

local Button2 = Instance.new("TextButton")
Button2.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
Button2.Text = "Unequip"
Button2.Parent = MainFrame

local Button3 = Instance.new("TextButton")
Button3.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
Button3.Text = "Normal"
Button3.Parent = MainFrame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
ToggleButton.Text = "Enable tower duping(laggy)"
ToggleButton.Parent = MainFrame

local MorphButton = Instance.new("TextButton")
MorphButton.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
MorphButton.Text = "Morph"
MorphButton.Parent = MainFrame

local RainbowButton = Instance.new("TextButton")
RainbowButton.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
RainbowButton.Text = "Random Rainbow Title"
RainbowButton.Parent = MainFrame

local RandomTowerButton = Instance.new("TextButton")
RandomTowerButton.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
RandomTowerButton.Text = "Random Tower"
RandomTowerButton.Parent = MainFrame

-- Adjust the rest of your existing code for functionality here...

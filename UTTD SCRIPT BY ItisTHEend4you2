local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\197\60","\143\235\18\33\23\229\158\19"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v101=0;local v102;while true do if (0==v101) then v102=v10(v8(v42,16));if v30 then local v120=v13(v102,v30);v30=nil;return v120;else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;else local v104=0;local v105;while true do if (0==v104) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==1) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==0) then v55=v34();v56=v34();v54=1;end if (3==v54) then if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==(5272 -3225)) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-(1642 -(555 + 64)) ) * (v57 + (v58/(2^52))) ;end if (v54==1) then v57=1;v58=(v31(v56,1,57 -37 ) * (2^32)) + v55 ;v54=2;end if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==1) and  -1) or (1 -0) ;v54=3;end end end local function v36(v61) local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=932 -(857 + 74) , #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v79=1,v68 do local v80=0;local v81;local v82;while true do if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v69[v79]=v82;break;end if (v80==0) then v81=v32();v82=nil;v80=1;end end end v67[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,928 -(214 + 713) ,1)==0) then local v108=0;local v109;local v110;local v111;while true do if (v108==1) then v111={v33(),v33(),nil,nil};if (v109==0) then local v121=0;while true do if (v121==0) then v111[3]=v33();v111[1 + 3 ]=v33();break;end end elseif (v109==1) then v111[3]=v34();elseif (v109==2) then v111[3]=v34() -(2^(893 -(282 + 595))) ;elseif (v109==3) then local v132=0;while true do if (v132==0) then v111[3]=v34() -(2^16) ;v111[4]=v33();break;end end end v108=2;end if (2==v108) then if (v31(v110,1,1)==(1638 -(1523 + 114))) then v111[2]=v69[v111[2]];end if (v31(v110,2,2)==1) then v111[3]=v69[v111[3]];end v108=3;end if (v108==0) then v109=v31(v84,2,3);v110=v31(v84,4,6);v108=1;end if (3==v108) then if (v31(v110,3,3)==1) then v111[4]=v69[v111[4]];end v64[v83]=v111;break;end end end end for v85=1,v34() do v65[v85-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v87=v74;local v88=v75;local v89=v76;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v106=0,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + 1 ];else v97[v106]=v94[v106 + 1 + 0 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v107=0;while true do if (v107==1) then if (v100<=46) then if (v100<=22) then if (v100<=10) then if (v100<=4) then if (v100<=1) then if (v100==(1065 -(68 + 997))) then local v135=v99[1272 -(226 + 1044) ];local v136,v137=v90(v97[v135](v97[v135 + 1 ]));v92=(v137 + v135) -1 ;local v138=0;for v200=v135,v92 do local v201=0;while true do if (v201==0) then v138=v138 + 1 ;v97[v200]=v136[v138];break;end end end else v97[v99[2]]=v97[v99[3]];end elseif (v100<=2) then v97[v99[2]]=v99[3] + v97[v99[4]] ;elseif (v100==3) then v97[v99[2]]=v97[v99[3]]%v99[4] ;else local v217=0;local v218;local v219;local v220;while true do if (v217==0) then v218=v88[v99[3]];v219=nil;v217=1;end if (v217==2) then for v399=1,v99[4] do local v400=0;local v401;while true do if (v400==0) then v91=v91 + (4 -3) ;v401=v87[v91];v400=1;end if (v400==1) then if (v401[1]==1) then v220[v399-1 ]={v97,v401[3]};else v220[v399-1 ]={v72,v401[120 -(32 + 85) ]};end v96[ #v96 + 1 ]=v220;break;end end end v97[v99[2]]=v40(v218,v219,v73);break;end if (v217==1) then v220={};v219=v18({},{[v7("\133\254\210\238\224\116\100","\48\218\161\187\128\132\17\28")]=function(v402,v403) local v404=v220[v403];return v404[1][v404[2]];end,[v7("\112\58\83\222\88\12\83\223\74\29","\187\47\101\61")]=function(v405,v406,v407) local v408=0;local v409;while true do if (v408==0) then v409=v220[v406];v409[1][v409[2]]=v407;break;end end end});v217=2;end end end elseif (v100<=7) then if (v100<=5) then local v142=v99[2];local v143=v99[4];local v144=v142 + 2 ;local v145={v97[v142](v97[v142 + 1 ],v97[v144])};for v202=1,v143 do v97[v144 + v202 ]=v145[v202];end local v146=v145[1];if v146 then v97[v144]=v146;v91=v99[3];else v91=v91 + 1 ;end elseif (v100>6) then v97[v99[2]]=v72[v99[3]];else local v225=v99[2];local v226=v97[v99[3]];v97[v225 + 1 ]=v226;v97[v225]=v226[v99[4]];end elseif (v100<=8) then local v147=0;local v148;while true do if (v147==0) then v148=v99[2];v97[v148](v21(v97,v148 + 1 ,v92));break;end end elseif (v100==9) then v97[v99[2]][v99[3]]=v97[v99[4]];else v97[v99[2]]=v97[v99[3]][v97[v99[4 + 0 ]]];end elseif (v100<=(4 + 12)) then if (v100<=13) then if (v100<=11) then do return v97[v99[959 -(892 + 65) ]]();end elseif (v100>12) then local v234=0;local v235;local v236;while true do if (0==v234) then v235=v99[2];v236={};v234=1;end if (v234==1) then for v410=1, #v96 do local v411=v96[v410];for v420=0, #v411 do local v421=v411[v420];local v422=v421[1];local v423=v421[2];if ((v422==v97) and (v423>=v235)) then local v439=0;while true do if (v439==0) then v236[v423]=v422[v423];v421[1]=v236;break;end end end end end break;end end else local v237=0;local v238;while true do if (v237==0) then v238=v99[2];v97[v238](v97[v238 + 1 ]);break;end end end elseif (v100<=14) then v97[v99[4 -2 ]][v97[v99[3]]]=v97[v99[4]];elseif (v100==15) then local v239=0;local v240;while true do if (v239==0) then v240=v99[2];do return v97[v240](v21(v97,v240 + 1 ,v99[3]));end break;end end else v97[v99[3 -1 ]]=v72[v99[4 -1 ]];end elseif (v100<=19) then if (v100<=17) then local v151=v99[352 -(87 + 263) ];local v152,v153=v90(v97[v151](v21(v97,v151 + 1 ,v99[3])));v92=(v153 + v151) -(181 -(67 + 113)) ;local v154=0;for v205=v151,v92 do v154=v154 + 1 ;v97[v205]=v152[v154];end elseif (v100==18) then local v243=v99[2 + 0 ];local v244={v97[v243](v21(v97,v243 + 1 ,v92))};local v245=0;for v329=v243,v99[9 -5 ] do v245=v245 + 1 ;v97[v329]=v244[v245];end else v91=v99[3];end elseif (v100<=(15 + 5)) then local v155=0;local v156;local v157;local v158;local v159;while true do if (0==v155) then v156=v99[2];v157,v158=v90(v97[v156](v97[v156 + 1 ]));v155=1;end if (v155==1) then v92=(v158 + v156) -1 ;v159=0;v155=2;end if (v155==2) then for v365=v156,v92 do v159=v159 + 1 ;v97[v365]=v157[v159];end break;end end elseif (v100==(83 -62)) then local v247=v99[2];do return v21(v97,v247,v247 + v99[3] );end else do return v97[v99[2]]();end end elseif (v100<=34) then if (v100<=28) then if (v100<=25) then if (v100<=23) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v100>(976 -(802 + 150))) then local v248=v99[2];v97[v248]=v97[v248](v21(v97,v248 + 1 ,v99[3]));else local v250=0;local v251;local v252;local v253;while true do if (v250==1) then v253=v97[v251 + 2 ];if (v253>0) then if (v252>v97[v251 + 1 ]) then v91=v99[7 -4 ];else v97[v251 + 3 ]=v252;end elseif (v252<v97[v251 + 1 ]) then v91=v99[3];else v97[v251 + 3 ]=v252;end break;end if (0==v250) then v251=v99[2];v252=v97[v251];v250=1;end end end elseif (v100<=26) then local v162=v99[2];local v163=v97[v162 + 2 ];local v164=v97[v162] + v163 ;v97[v162]=v164;if (v163>0) then if (v164<=v97[v162 + (1 -0) ]) then v91=v99[3 + 0 ];v97[v162 + (1000 -(915 + 82)) ]=v164;end elseif (v164>=v97[v162 + 1 ]) then local v370=0;while true do if (v370==0) then v91=v99[3];v97[v162 + 3 ]=v164;break;end end end elseif (v100==27) then v97[v99[2]][v97[v99[8 -5 ]]]=v99[4];else local v256=v88[v99[3]];local v257;local v258={};v257=v18({},{[v7("\57\5\183\7\54\3\34","\82\102\90\222\105")]=function(v333,v334) local v335=0;local v336;while true do if (v335==0) then v336=v258[v334];return v336[1][v336[2]];end end end,[v7("\148\116\201\82\9\181\95\42\174\83","\78\203\43\167\55\126\220\49")]=function(v337,v338,v339) local v340=0;local v341;while true do if (v340==0) then v341=v258[v338];v341[1][v341[2]]=v339;break;end end end});for v342=1,v99[4] do v91=v91 + 1 ;local v343=v87[v91];if (v343[1]==1) then v258[v342-1 ]={v97,v343[3]};else v258[v342-1 ]={v72,v343[3]};end v96[ #v96 + 1 ]=v258;end v97[v99[2]]=v40(v256,v257,v73);end elseif (v100<=31) then if (v100<=29) then v97[v99[2]]=v99[3];elseif (v100==30) then v97[v99[2]]=v73[v99[3]];else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=32) then local v168=v99[2];local v169=v97[v168];for v208=v168 + 1 ,v92 do v15(v169,v97[v208]);end elseif (v100>33) then local v264=v99[2];local v265={v97[v264](v21(v97,v264 + 1 ,v92))};local v266=0 + 0 ;for v345=v264,v99[4] do local v346=0;while true do if (v346==0) then v266=v266 + (1 -0) ;v97[v345]=v265[v266];break;end end end else local v267=v99[2];do return v21(v97,v267,v92);end end elseif (v100<=40) then if (v100<=37) then if (v100<=35) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];elseif (v100==(1223 -(1069 + 118))) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;else local v269=v99[2];v97[v269](v21(v97,v269 + 1 ,v99[6 -3 ]));end elseif (v100<=38) then do return v97[v99[2]];end elseif (v100>39) then do return v97[v99[3 -1 ]];end else local v270=0;local v271;while true do if (v270==0) then v271=v99[2];v97[v271](v21(v97,v271 + 1 ,v99[3]));break;end end end elseif (v100<=43) then if (v100<=41) then v97[v99[2]]=v99[3]~=0 ;elseif (v100==(8 + 34)) then do return;end else v97[v99[2]]={};end elseif (v100<=(77 -33)) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>(45 + 0)) then if (v97[v99[2]]==v99[4]) then v91=v91 + (792 -(368 + 423)) ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=70) then if (v100<=58) then if (v100<=52) then if (v100<=(153 -104)) then if (v100<=47) then if (v97[v99[20 -(10 + 8) ]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>48) then v97[v99[2]]=v73[v99[3]];else local v278=0;local v279;local v280;local v281;while true do if (v278==1) then v281=v97[v279 + (444 -(416 + 26)) ];if (v281>0) then if (v280>v97[v279 + 1 ]) then v91=v99[3];else v97[v279 + 3 ]=v280;end elseif (v280<v97[v279 + 1 ]) then v91=v99[3];else v97[v279 + 3 ]=v280;end break;end if (v278==0) then v279=v99[7 -5 ];v280=v97[v279];v278=1;end end end elseif (v100<=50) then v97[v99[2]]=v99[3] + v97[v99[4]] ;elseif (v100>51) then v97[v99[2]]= #v97[v99[3]];else v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;end elseif (v100<=55) then if (v100<=53) then local v174=0;local v175;local v176;local v177;while true do if (0==v174) then v175=v99[2];v176=v97[v175 + 2 ];v174=1;end if (v174==1) then v177=v97[v175] + v176 ;v97[v175]=v177;v174=2;end if (v174==2) then if (v176>0) then if (v177<=v97[v175 + 1 ]) then local v426=0;while true do if (0==v426) then v91=v99[3];v97[v175 + 3 ]=v177;break;end end end elseif (v177>=v97[v175 + 1 ]) then local v427=0;while true do if (v427==0) then v91=v99[3];v97[v175 + 3 ]=v177;break;end end end break;end end elseif (v100>54) then if  not v97[v99[6 -4 ]] then v91=v91 + 1 + 0 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[4 -1 ]] + v99[4] ;end elseif (v100<=56) then local v178=0;local v179;local v180;while true do if (v178==1) then for v373=v179 + 1 ,v92 do v15(v180,v97[v373]);end break;end if (v178==0) then v179=v99[2];v180=v97[v179];v178=1;end end elseif (v100==57) then local v285=v99[2];local v286={};for v352=1, #v96 do local v353=0;local v354;while true do if (v353==0) then v354=v96[v352];for v428=0, #v354 do local v429=0;local v430;local v431;local v432;while true do if (1==v429) then v432=v430[2];if ((v431==v97) and (v432>=v285)) then local v460=0;while true do if (v460==0) then v286[v432]=v431[v432];v430[431 -(44 + 386) ]=v286;break;end end end break;end if (0==v429) then v430=v354[v428];v431=v430[439 -(145 + 293) ];v429=1;end end end break;end end end else v97[v99[2]]=v97[v99[3]]%v99[1490 -(998 + 488) ] ;end elseif (v100<=64) then if (v100<=61) then if (v100<=59) then do return;end elseif (v100==60) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]();end elseif (v100<=62) then local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==0) then v182=v99[2];v183,v184=v90(v97[v182](v21(v97,v182 + 1 ,v99[3])));v181=1;end if (v181==1) then v92=(v184 + v182) -1 ;v185=0;v181=2;end if (v181==2) then for v375=v182,v92 do local v376=0;while true do if (v376==0) then v185=v185 + 1 ;v97[v375]=v183[v185];break;end end end break;end end elseif (v100>63) then local v288=0;local v289;while true do if (v288==0) then v289=v99[2];v97[v289]=v97[v289](v21(v97,v289 + 1 ,v92));break;end end else v97[v99[2]]=v99[3];end elseif (v100<=67) then if (v100<=65) then for v209=v99[2],v99[3] do v97[v209]=nil;end elseif (v100>66) then v91=v99[3];else local v293=v99[2];v97[v293]=v97[v293](v21(v97,v293 + 1 ,v99[1 + 2 ]));end elseif (v100<=(56 + 12)) then v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;elseif (v100>69) then local v295=v99[2];do return v21(v97,v295,v92);end else local v296=0;local v297;while true do if (v296==0) then v297=v99[2];do return v97[v297](v21(v97,v297 + 1 ,v99[3]));end break;end end end elseif (v100<=82) then if (v100<=76) then if (v100<=73) then if (v100<=71) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100>72) then if (v97[v99[2]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=74) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>75) then v97[v99[2]]=v99[3]~=0 ;else local v300=v99[774 -(201 + 571) ];local v301,v302=v90(v97[v300](v21(v97,v300 + 1 ,v92)));v92=(v302 + v300) -(1139 -(116 + 1022)) ;local v303=0;for v356=v300,v92 do local v357=0;while true do if (v357==0) then v303=v303 + 1 ;v97[v356]=v301[v303];break;end end end end elseif (v100<=79) then if (v100<=77) then local v189=0;local v190;while true do if (0==v189) then v190=v99[2];v97[v190](v97[v190 + 1 ]);break;end end elseif (v100==(324 -246)) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v97[v99[3]];end elseif (v100<=80) then for v211=v99[2 + 0 ],v99[3] do v97[v211]=nil;end elseif (v100==(295 -214)) then v97[v99[2]]();else local v307=v99[7 -5 ];v97[v307]=v97[v307](v21(v97,v307 + 1 ,v92));end elseif (v100<=88) then if (v100<=85) then if (v100<=(942 -(814 + 45))) then local v191=0;local v192;while true do if (v191==0) then v192=v99[2];v97[v192](v21(v97,v192 + 1 ,v92));break;end end elseif (v100>84) then v97[v99[2]][v97[v99[3]]]=v99[4];else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=86) then v97[v99[2]][v99[3]]=v99[4];elseif (v100>87) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=91) then if (v100<=89) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==90) then v97[v99[2]][v99[3]]=v99[4];else v97[v99[2]]={};end elseif (v100<=92) then local v195=v99[2];local v196=v99[9 -5 ];local v197=v195 + 1 + 1 ;local v198={v97[v195](v97[v195 + 1 ],v97[v197])};for v213=1,v196 do v97[v197 + v213 ]=v198[v213];end local v199=v198[1 + 0 ];if v199 then local v318=0;while true do if (0==v318) then v97[v197]=v199;v91=v99[888 -(261 + 624) ];break;end end else v91=v91 + 1 ;end elseif (v100>93) then local v319=v99[2];local v320,v321=v90(v97[v319](v21(v97,v319 + (1 -0) ,v92)));v92=(v321 + v319) -1 ;local v322=0;for v360=v319,v92 do v322=v322 + 1 ;v97[v360]=v320[v322];end else local v323=v99[1082 -(1020 + 60) ];local v324=v97[v99[3]];v97[v323 + 1 ]=v324;v97[v323]=v324[v99[4]];end v91=v91 + 1 ;break;end if (v107==0) then v99=v87[v91];v100=v99[1 -0 ];v107=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);

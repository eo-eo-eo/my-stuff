local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0.4, 0, 0.8, 0)
Frame.Position = UDim2.new(0.5, -Frame.Size.X.Offset / 2, 0.5, -Frame.Size.Y.Offset / 2)
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.5
Frame.Visible = true
Frame.Parent = ScreenGui

local AspectRatio = Instance.new("UIAspectRatioConstraint")
AspectRatio.AspectRatio = 4 / 3
AspectRatio.Parent = Frame

local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, 0, 0.8, 0)
ScrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.ScrollBarThickness = 10
ScrollingFrame.Parent = Frame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = ScrollingFrame
UIListLayout.FillDirection = Enum.FillDirection.Vertical
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
UIListLayout.Padding = UDim.new(0, 10)

local TextBox = Instance.new("TextBox")
TextBox.Size = UDim2.new(0.9, 0, 0.1, 0)
TextBox.Position = UDim2.new(0.5, -TextBox.Size.X.Offset / 2, 0, 0)
TextBox.Text = "monsters name here"
TextBox.Parent = ScrollingFrame

local buttonWidth = 0.9
local buttonHeight = 0.08

local function createButton(text)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(buttonWidth, 0, buttonHeight, 0)
    button.Text = text
    button.Parent = ScrollingFrame
    return button
end

local Button1 = createButton("Equip")
local Button2 = createButton("Unequip")
local Button3 = createButton("Normal")
local ToggleButton = createButton("Enable tower duping")
local MorphButton = createButton("Morph")
local RainbowButton = createButton("Random Rainbow Title")
local RandomTowerButton = createButton("Random Tower")
local PlaceButton = createButton("Place")

local loopEnabled = false
local isNormal = true
local rainbowLoopEnabled = false
local randomTowerLoopEnabled = false

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local EquipRemote = ReplicatedStorage:WaitForChild("Equip")
local Equip2Remote = ReplicatedStorage:WaitForChild("Equip2")
local TitleRemote = ReplicatedStorage:WaitForChild("Title")
local PlaceRemote = ReplicatedStorage:WaitForChild("Place")

local monsterMapping = {
    froggit = 1, vegetoid = 2, loox = 3, migosp = 4, moldsmal = 5, whimsum = 6, napstablook = 7, snowdrake = 8, icecap = 9,
    lesserdog = 10, gyftrot = 11, jerry = 12, doggo = 13, dogami = 14, dogaressa = 15, greaterdog = 17, aaron = 18, woshua = 19,
    moldbygg = 20, shyren = 21, vulkin = 22, tsunderplane = 23, pyrope = 24, royalguard01 = 25, royalguard02 = 26, mettaton = 27,
    finalfroggit = 28, whimsalot = 29, astigmatism = 30, knightknight = 31, madjick = 32, bluesoul = 33, greensoul = 34, orangesoul = 35,
    purplesoul = 36, yellowsoul = 37, cyansoul = 38, dummy = 39, temmie = 40, maddummy = 41, alphys = 42, glyde = 43, sosorry = 44,
    memoryhead = 45, endogeny = 46, reaperbird = 47, lemonbread = 48, snowdrakesmother = 49, parsnik = 50, moldessa = 51, migospel = 52,
    rudinn = 501, hathy = 502, ponman = 503, jigsawry = 504, cround = 505, kround = 506, rabbick = 507, bloxer = 508, clover = 509,
    starwalkerbird = 510, rudinnranger = 511, headhathy = 512, frisk = 1001, toriel = 1002, papyrus = 1003, undyne = 1004, muffet = 1005,
    mettatonex = 1006, omegaflowey = 1007, undynetheundying = 1008, mettatonneo = 1009, sans = 1010, asgore = 1011, madmewmew = 1012,
    asriel = 1013, kris = 2001, susie = 2002, ralsei = 2003, lancer = 2004, king = 2005, jevil = 2006
}

local function getMonsterId(monsterName)
    return monsterMapping[monsterName] or monsterMapping[monsterName:lower()] or nil
end

local function fireEquipRemote(monsterId, equipType)
    if isNormal then
        EquipRemote:FireServer(monsterId, equipType)
    else
        local args = { [1] = monsterId - 1000, [2] = equipType }
        Equip2Remote:FireServer(unpack(args))
    end
end

Button1.MouseButton1Click:Connect(function()
    local monsterName = TextBox.Text:match("^%s*(.-)%s*$")
    monsterName = monsterName:gsub("%s+", "")
    local monsterId = getMonsterId(monsterName)
    if monsterId then
        fireEquipRemote(monsterId, 1)
    end
end)

Button2.MouseButton1Click:Connect(function()
    local monsterName = TextBox.Text:match("^%s*(.-)%s*$")
    monsterName = monsterName:gsub("%s+", "")
    local monsterId = getMonsterId(monsterName)
    if monsterId then
        fireEquipRemote(monsterId, 2)
    end
end)

Button3.MouseButton1Click:Connect(function()
    isNormal = not isNormal
    Button3.Text = isNormal and "Normal" or "Special"
end)

PlaceButton.MouseButton1Click:Connect(function()
    local monsterName = TextBox.Text:match("^%s*(.-)%s*$")
    monsterName = monsterName:gsub("%s+", "")
    local monsterId = getMonsterId(monsterName)
    if monsterId then
        if not isNormal then
            monsterId = monsterId - 1000
        end

        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        
        local userInputService = game:GetService("UserInputService")

        local clicked = false
        local position = nil

        local function onInputBegan(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                clicked = true
                position = mouse.Hit.p
            end
        end

        userInputService.InputBegan:Connect(onInputBegan)

        while not clicked do
            wait()
        end

        local args = {
            [1] = monsterId,
            [2] = CFrame.new(position) * CFrame.Angles(0, 0, 0),
            [3] = isNormal,
            [4] = 0
        }
        PlaceRemote:FireServer(unpack(args))
    end
end)

local function makeDraggable(target)
    local dragging = false
    local dragInput, mousePos, framePos

    local function update(input)
        local delta = input.Position - mousePos
        target.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
    end

    target.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = target.Position
        end
    end)

    target.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            update(input)
        end
    end)
end

makeDraggable(Frame)
